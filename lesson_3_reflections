- When would you want to create a remote repository rather than keeping all your work local?.
 Remote repository are created in cases to keep track of your project. 
 Can also be important in cases where the developer needs his/her project to be open source(for collaborations).
 
- Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?.
<<<<<<< HEAD

 - What is the benefit of having a copy of the last known state of the remote stored locally?
    To checkout that both repositories should not be conflicted on a merge for continuous work flow.


- Describe the differences between forks, clones, and branches. When would you use one instead of another?

- What is the benefit of having a copy of the last known state of the remote stored locally?
    To checkout that both repositories should not be conflicted on a merge for continuous work flow.

- How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

- When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
   Making changes to a separate branch prevents merge conflicts to master branch, provides reviews for collaboration before merging. Direct changes to master branch is less work, effort, and less-time consuming but changes in separate branches is much more preferable for proper reviewing for smooth functioning. 
    